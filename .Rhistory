delay = mean(dep_delay, na.rm = TRUE))
sample_n(flights, 10)
library(twitteR)
rdmTweets <- userTimeline("rdatamining", n=100)
setup_twitter_oauth("API key", "API secret")
library(twitteR)
setup_twitter_oauth("jYEGXw87lkgjitQqUIBVcnUzE", "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm")
?twitteR
load("C:/Users/bryan_000/Downloads/rdmTweets-201306.RData")
library(httr)
setup_twitter_oauth("jYEGXw87lkgjitQqUIBVcnUzE", "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm")
setup_twitteR_oauth("jYEGXw87lkgjitQqUIBVcnUzE", "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm")
twitteR_oauth("jYEGXw87lkgjitQqUIBVcnUzE", "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm")
getTwitterOAuth(consumer_key, consumer_secret)
registerTwitterOAuth(oauth)
getTwitterOAuth("jYEGXw87lkgjitQqUIBVcnUzE", "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm")
getTwitterOAuth("79261207-rMLPaWDKKkPg7iwjrNHq0yVX9vEKtYkSVGh7CAluj", "JgFqyPrKcqodyRZ1ApxuzOeTXfrlj7fQpcoX9FXF21Ndt")
getTwitterOAuth("79261207-rMLPaWDKKkPg7iwjrNHq0yVX9vEKtYkSVGh7CAluj", "JgFqyPrKcqodyRZ1ApxuzOeTXfrlj7fQpcoX9FXF21Ndt")
getTwitterOAuth("jYEGXw87lkgjitQqUIBVcnUzE", "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
getTwitterOAuth("jYEGXw87lkgjitQqUIBVcnUzE", "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm")
cred <- OAuthFactory$new(consumerKey='cred <- OAuthFactory$new(consumerKey='secret',
consumerSecret='oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')',
consumerSecret='secret',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
cred <- OAuthFactory$new(consumerKey='cred <- OAuthFactory$new(consumerKey='secret',
consumerSecret='oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
cred <- OAuthFactory$new(consumerKey='jYEGXw87lkgjitQqUIBVcnUzE',consumerSecret='oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',requestURL='https://api.twitter.com/oauth/request_token',accessURL='http://api.twitter.com/oauth/access_token',authURL='http://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
8461425
cred$handshake(cainfo="cacert.pem")
#install the necessary packages
install.packages("ROAuth")
install.packages("twitteR")
install.packages("wordcloud")
install.packages("tm")
library("ROAuth")
library("twitteR")
library("wordcloud")
library("tm")
#necessary step for Windows
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
#to get your consumerKey and consumerSecret see the twitteR documentation for instructions
cred <- OAuthFactory$new(consumerKey='secret',
consumerSecret='secret',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='http://api.twitter.com/oauth/access_token',
authURL='http://api.twitter.com/oauth/authorize')
#necessary step for Windows
cred$handshake(cainfo="cacert.pem")
#save for later use for Windows
save(cred, file="twitter authentication.Rdata")
registerTwitterOAuth(cred)
#the cainfo parameter is necessary on Windows
r_stats<- searchTwitter("#Rstats", n=1500, cainfo="cacert.pem")
#save text
r_stats_text <- sapply(r_stats, function(x) x$getText())
#create corpus
r_stats_text_corpus <- Corpus(VectorSource(r_stats_text))
#clean up
r_stats_text_corpus <- tm_map(r_stats_text_corpus, tolower)
r_stats_text_corpus <- tm_map(r_stats_text_corpus, removePunctuation)
r_stats_text_corpus <- tm_map(r_stats_text_corpus, function(x)removeWords(x,stopwords()))
wordcloud(r_stats_text_corpus)
install.packages("twitteR")
save(cred, file="twitter authentication.Rdata")
install.packages("twitteR")
install.packages("twitteR")
install.packages("twitteR")
save(cred, file="twitter authentication.Rdata")
registerTwitterOAuth(cred)
cred <- OAuthFactory$new(consumerKey='jYEGXw87lkgjitQqUIBVcnUzE',consumerSecret='oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',requestURL='https://api.twitter.com/oauth/request_token',accessURL='http://api.twitter.com/oauth/access_token',authURL='http://api.twitter.com/oauth/authorize')
library(twitteR)
cred <- OAuthFactory$new(consumerKey='jYEGXw87lkgjitQqUIBVcnUzE',consumerSecret='oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',requestURL='https://api.twitter.com/oauth/request_token',accessURL='http://api.twitter.com/oauth/access_token',authURL='http://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
twitCred = c(consumerKey = ' jYEGXw87lkgjitQqUIBVcnUzE', consumerSecret = ' oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',oauthKey = ' 79261207-rMLPaWDKKkPg7iwjrNHq0yVX9vEKtYkSVGh7CAluj',oauthSecret = ' JgFqyPrKcqodyRZ1ApxuzOeTXfrlj7fQpcoX9FXF21Ndt')
curl = getCurlHandle()
options(RCurlOptions = list(capath = system.file('CurlSSL', 'cacert.pem',
package = 'RCurl'), ssl.verifypeer = FALSE))
curlSetOpt(.opts = list(proxy = 'proxyserver:port'), curl = curl)
library("twitteR")
library("ROAuth")
cred <- OAuthFactory$new(consumerKey='jYEGXw87lkgjitQqUIBVcnUzE',consumerSecret='oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',requestURL='https://api.twitter.com/oauth/request_token',accessURL='http://api.twitter.com/oauth/access_token',authURL='http://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
save(cred, file="twitter authentication.Rdata")
cred <- OAuthFactory$new(consumerKey='jYEGXw87lkgjitQqUIBVcnUzE',consumerSecret='oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm',requestURL='https://api.twitter.com/oauth/request_token',accessURL='https://api.twitter.com/oauth/access_token',authURL='https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
search.string <- "#nba"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en")
cred$handshake(cainfo="cacert.pem")
tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en")
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "jYEGXw87lkgjitQqUIBVcnUzE"
consumerSecret <- "oOsXCQQvdzujOamHALWLWB4Hv22Whjilou7gcspTAk1jydTBcm"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
registerTwitterOAuth(twitCred)
tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en")
tweets
source('~/GitHub/MyWork/TwitterLogin.R')
registerTwitterOAuth(twitCred)
search.string <- "#highered"; no.of.tweets <- 100; tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en");tweets
source('~/GitHub/MyWork/TwitterGetTweets.R')
tweets
un.tweets = searchTwitter('@United',n=1000, cainfo="cacert.pem")
length(un.tweets)
un.tweets
rm(tweets)
library(plyr)
un.text = laply(un.tweets, function(t)t$getText())
un.text
tr <-getTrends(’weekly’, as.character(Sys.Date()-1))
tr <-getTrends(’weekly’, as.character(Sys.Date()-1))
library(tm)
data.corpus <- Corpus(VectorSource(un.text))
data.corpus <- tm_map(data.corpus, tolower)
data.corpus <- t_map(data.corpus, removePunctuation)
# remove stop words, otherwise some of these words would appear as most used
> some_stopwords <- c(stopwords('english'))
> data.corpus <- tm_map(data.corpus, removeWords, some_stopwords)
some_stopwords <- c(stopwords('english'))
data.corpus <- tm_map(data.corpus, removeWords, some_stopwords)
data.corpus
data.corpus <- TermDocumentMatrix(data.corpus)
data.corpus
data.tm
inspect(data.corpus[1:1000])
un.text
inspect(data.corpus[1:1000])
data.corpus <- t_map(data.corpus, removePunctuation)
library(tm)
install.packages("tm")
library(tm)
data.corpus <- t_map(data.corpus, removePunctuation)
library(TwitteR)
library(twitteR)
data.corpus <- t_map(data.corpus, removePunctuation)
library(plyr)
data.corpus <- t_map(data.corpus, removePunctuation)
data.corpus <- tm_map(data.corpus, removePunctuation)
data.corpus <- tm_map(data.corpus, tolower)
inspect(data.corpus[1:1000])
data.corpus <- TermDocumentMatrix(data.corpus)
data.corpus <- tm_map(data.corpus, removeWords, some_stopwords)
data.corpus
data.tm
data.corpus [[116]]
findFreqTerms(data.dtm, lowfreq=30)
findFreqTerms(data.corpus, lowfreq=30)
tr <- getTrends(’weekly’, as.character(Sys.Date()-1))
tr <- getTrends(’weekly’, as.character(Sys.Date()-1))
data.dtm <- TermDocumentMatrix(data.corpus)
delta.tweets <- searchTwitter('@delta', n=1000)
source('~/GitHub/MyWork/TwitterGetTweets.R')
load("~/GitHub/R/twitter authentication.Rdata")
source('~/GitHub/MyWork/TwitterGetTweets.R')
source('~/GitHub/MyWork/TwitterGetTweets.R')
source('~/GitHub/MyWork/TwitterLogin.R')
source('~/GitHub/MyWork/TwitterGetTweets.R')
tweets
source('~/GitHub/MyWork/TwitterGetTweets.R')
USArrests
library(psych)
fit <- principal(USArrests, nfactors=, rotate="varimax")
fit
install.packages("nFactors")
?pa
?fa
Harman74
require(stats)
Harman74
Harman74.cor
install.packages("FactoMineR")
data(us.bis.yield)
library("Rsafd")
install.package("Rsafd")
install.packages("Rsafd")
install.packages("Rsafd")
data(us.bis.yield)
gender = rep(c("female","male"),c(1835,2691))
admitted = rep(c("yes","no","yes","no"),c(557,1278,1198,1493))
dept = rep(c("A","B","C","D","E","F","A","B","C","D","E","F"),
c(89,17,202,131,94,24,19,8,391,244,299,317))
dept2 = rep(c("A","B","C","D","E","F","A","B","C","D","E","F"),
c(512,353,120,138,53,22,313,207,205,279,138,351))
department = c(dept,dept2)
ucb = data.frame(gender,admitted,department)
rm(gender,admitted,dept,dept2,department)
ls()
rm(accessURL)
rm(cred)
rm(un.text)
rm(un.tweets)
ls()
rm(authURL)
rm(reqURL)
rm(consumerKey)
rm(curl)
rm(no.of.tweets)
rm(reqURL)
ls()
rm(data.corpus)
rm(search.string)
rm(some_stopwords)
rm(tweets)
rm(twitCred)
rm(consumerSecret)
ucb
save(ucb)
?save
save(ucb, file = "ucb.RData")
str(ucb)
summary(ucb)
table(ucb$gender)
table(ucb$admitted)
table(ucb$department) -> dept.table
prop.table(dept.table)
prop.table(dept.table) * 100
with(ucb, table(gender, admitted))
xtabs(~ gender + admitted, data=ucb)
xtabs(~ gender + admitted, data=ucb) -> gen.adm.table
data(faithful)
stem(waiting)
stem(faithful$waiting)
as.data.frame(state.x77) -> states
states$region <- state.region
by(data=states[4], IND=states[9], FUN=mean)
gender = rep(c("female","male"),c(1835,2691))
rm(list=ls())
install.packages("RFacebook")
install.packages("Rfacebook")
install.packages("Rook")
Require(Rfacebook)
require(Rfacebook)
require(Rook)
fb_oauth <- fbOAuth(app_id="176988012511120", app_secret="991efd8aba85c69235c4431b57dc12b8")
fb_oauth <- fbOAuth(app_id="176988012511120", app_secret="CAACEdEose0cBAAKXSOJVin1FLfuMBrzDVxXX7zPNHm28NAA2izuTKlN41zg9Xd7202qT6wKG7gwcn5ViI9qhm20WQQZCdwKNXPLJn7lNRaxFG46RAWo9NpAtwTgk28Nh3fITiN7cKv2g7vHmtkbDmowBk11oS37ZBg9mX2mzuMzBYDt0vz14jmnhaiJQKOvEZATGOlnftKquXZBqAxI8vRtbcpYmU24ZD")
fb_oauth <- fbOAuth(app_id="145634995501895", app_secret="CCAACEdEose0cBAAhAlvU0R49tOx5CZAj9zdXOmo5F54Ks869XdzuNKov9GeiQrCwnPO0kuSSte6WDZAu9jGNxayoo4wn6Ery9hDv6pMSDam9OM0CRpPw2obrNHtZAz01BMwrUQntEgwZCsfebacN4hcXvniYqkJItD0OF9ZC1ZB4Mcg39GfudgMH46ZBiOFVWZB6RbDUHkZBT0EoVnle00Nb3IK3OlZBZBj47w8ZD")
me <- getUsers("me", token=fb_oauth)
fb_oauth <- fbOAuth(app_id="145634995501895", app_secret="CCAACEdEose0cBAAhAlvU0R49tOx5CZAj9zdXOmo5F54Ks869XdzuNKov9GeiQrCwnPO0kuSSte6WDZAu9jGNxayoo4wn6Ery9hDv6pMSDam9OM0CRpPw2obrNHtZAz01BMwrUQntEgwZCsfebacN4hcXvniYqkJItD0OF9ZC1ZB4Mcg39GfudgMH46ZBiOFVWZB6RbDUHkZBT0EoVnle00Nb3IK3OlZBZBj47w8ZD")
token = "CAACEdEose0cBAKTTc22dkBPzz2Bj6ZAOprah478cKIRSYMKLXllIwtTBDUYk9gZABmaxHUDPLBRsLirVCGIaj7FnW0QZA2PbZCiZBZBFwnpztr2Man37wyqgngwYdKyK2jW3dyCnlMFJIe5ZAf91UVPzxKOmnlGdoUZCRLlM7QGAVdOPlJZCmGiUSTdghyPqQYN5IJdKrRs0WEGexjOIjTn0qDNZC9vPHkUZAkZD"
me <- getUsers("me", token=token)
me
my_friends <- getFriends(token, simplify=TRUE)
my_friends_info <- getUsers(my_friends$id, token=token, private_info=TRUE)
table(my_friends_info$location)
my_friends
my_friends <- getFriends(token)
str(me)
str(my_friends)
getFriends(token, simplify = FALSE)
rm(list(ls()))
rm(list(ls())
)
rm(list=ls())
list=ls()
rm(list=ls())
data(mtcars)
str(mtcars)
bestmodel <- step(inclusivemodel, direction = "both")
summary(bestmodel)
inclusivemodel <- lm(mpg ~ ., data = mtcars)
bestmodel <- step(inclusivemodel, direction = "both")
summary(bestmodel)
plot(bestmodel$residualks)
plot(bestmodel$residuals)
abline(o)
abline(0)
abline(0,0)
hist(bestmodel$residuals)
qqnorm(bestmodel$residuals)
abline(bestmodel$residuals)
qqplot(bestmodel$residuals)
qqline(bestmodel$residuals,)
plot(bestmodel$residuals~bestmodel$fitted)
abline(0,0)
plot(abs(bestmodel$residuals)~bestmodel$fitted)
plot(bestmodel$residuals~mtcars$am)
plot(bestmodel$residuals~mtcars$wt)
plot(bestmodel$residuals~mtcars$qsec)
abline(0,0)
plot(bestmodel$residuals~mtcars$am)
plot(bestmodel$residuals~mtcars$am)
source('~/GitHub/ClassProjectExData2/GetData01.R')
rm(list=ls())
source('~/GitHub/ClassProjectExData2/GetData01.R')
source('~/GitHub/ClassProjectExData2/GetData01.R')
zip.url <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
zip.file <- 'dataset.zip'
download.file(zip.url, destfile = zip.file)
unzip(zip.file)
source('~/GitHub/ClassProjectExData2/GetData01.R')
source('~/GitHub/ClassProjectExData2/GetData01.R')
source('~/GitHub/ClassProjectExData2/GetData01.R')
pwd
getwd()
setwd("C:/Users/bryan_000/Documents/GitHub/ClassProjectExData2")
rm(list=ls())
ls()
source('~/GitHub/ClassProjectExData2/GetData01.R')
source('~/GitHub/ClassProjectExData2/GetData01.R')
source('~/GitHub/ClassProjectExData2/GetData01.R')
totalByYear
source('~/GitHub/ClassProjectExData2/GetData01.R')
names(TotalByYear)
names(totalByYear)
str(totalByYear)
source('~/GitHub/ClassProjectExData2/GetData01.R')
source('~/GitHub/ClassProjectExData2/Plot1.R')
source('~/GitHub/ClassProjectExData2/Plot2.R')
source('~/GitHub/ClassProjectExData2/Plot2.R')
source('~/GitHub/ClassProjectExData2/Plot2.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
factor(BaltimoreCity$type)
typeByYear
source('~/GitHub/ClassProjectExData2/Plot3.R')
qplot(x = year,
xlab = "Year",
y = total,
ylab = "Total Emissions (tons)",
data = typeByYear,
color = typefactor,
geom = c("point", "smooth"),
method = "loess")
qplot(x = year,
xlab = "Year",
y = total,
ylab = "Total Emissions (tons)",
data = typeByYear,
color = typefactor)
qplot(x = year,
xlab = "Year",
y = total,
ylab = "Total Emissions (tons)",
data = typeByYear)
)
qplot(x = year, xlab = "Year", y = total, ylab = "Total Emissions (tons)",data = typeByYear)
typeByYear
qplot(x = year, y = total, data = typeByYear)
qplot(year,total, data = typeByYear)
?qplot
qplot(typeByYear$year,typeByYear$total, data = typeByYear)
dev.off()
qplot(typeByYear$year,typeByYear$total, data = typeByYear)
qplot(x = typeByYear$year,
xlab = "Year",
y = typeByYear$total,
ylab = "Total Emissions (tons)",
data = typeByYear,
color = typefactor)
qplot(x = typeByYear$year,
xlab = "Year",
y = typeByYear$total,
ylab = "Total Emissions (tons)",
data = typeByYear)
source('~/GitHub/ClassProjectExData2/Plot3.R')
rm(list=ls())
source('~/GitHub/ClassProjectExData2/Plot3.R')
str(typePM25ByYear)
qplot(year, Emissions, data=typePM25ByYear, color=type, geom="line") +
ggtitle(expression("Baltimore City" ~ PM[2.5] ~ "Emissions by Source Type and Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
png("plot3.png")
qplot(year, Emissions, data=typeByYear, color=type, geom="line") +
ggtitle(expression("Baltimore City" ~ PM[2.5] ~ "Emissions by Source Type and Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
source('~/GitHub/ClassProjectExData2/Plot3.R')
source('~/GitHub/ClassProjectExData2/Plot3.R')
png("plot3.png")
qplot(year, Emissions, data=typeByYear, color=type, geom="line") +
ggtitle(expression("Baltimore City" ~ PM[2.5] ~ "Emissions by Source Type and Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
source('~/GitHub/ClassProjectExData2/Plot4.R')
png("plot4.png")
qplot(year, Emissions, data=coalCombustionPM25ByYear, color=type, geom="line") +
stat_summary(fun.y = "sum", fun.ymin = "sum", fun.ymax = "sum",
color = "black", aes(shape="total"), geom="line") +
geom_line(aes(size="total", shape = NA)) +
ggtitle(expression("Coal Combustion" ~ PM[2.5] ~ "Emissions by Source Type and Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
source('~/GitHub/ClassProjectExData2/Plot4.R')
source('~/GitHub/ClassProjectExData2/Plot4.R')
png(filename="Plot4.png")
qplot(x = year,
xlab   = "Year",
y      = total,
ylab   = "Total Emissions (tons)",
data   = emissionsByYear,
geom   = c("point", "smooth"),
method = "loess")
dev.off()
png(filename="Plot4.png")
qplot(x = year,
xlab   = "Year",
y      = total,
ylab   = "Total Emissions (tons)",
data   = emissionsByYear,
geom   = c("point", "smooth"),
method = "loess"),
ggtitle = expression("Coal Combustion" ~ PM[2.5] ~ "Emissions by Source Type and Year")
dev.off()
png(filename="Plot4.png")
qplot(x = year,
xlab   = "Year",
y      = total,
ylab   = "Total Emissions (tons)",
data   = emissionsByYear,
geom   = c("point", "smooth"),
method = ("loess"),
ggtitle = expression("Coal Combustion" ~ PM[2.5] ~ "Emissions by Source Type and Year")
dev.off()
png(filename="Plot4.png")
qplot(x = year,
xlab   = "Year",
y      = total,
ylab   = "Total Emissions (tons)",
data   = emissionsByYear,
geom   = c("point", "smooth"),
method = ("loess"),
ggtitle = "Coal Combustion Emissions by Source Type and Year"
dev.off()
png(filename="Plot4.png")
qplot(x = year,
xlab   = "Year",
y      = total,
ylab   = "Total Emissions (tons)",
ggtitle = "Coal Combustion Emissions by Source Type and Year",
data   = emissionsByYear,
geom   = c("point", "smooth"),
method = ("loess")
dev.off()
png(filename="Plot4.png")
qplot(x = year,
xlab   = "Year",
y      = total,
ylab   = "Total Emissions (tons)",
ggtitle = "Coal Combustion Emissions by Source Type and Year",
data   = emissionsByYear,
geom   = c("point", "smooth"),
method = ("loess"))
dev.off()
source('~/GitHub/ClassProjectExData2/Plot4.R')
source('~/GitHub/ClassProjectExData2/Plot4.R')
source('~/GitHub/ClassProjectExData2/Plot4.R')
source('~/GitHub/ClassProjectExData2/Plot4.R')
source('~/GitHub/ClassProjectExData2/Plot4.R')
png(filename="Plot4.png")
qplot(year, total, data=emissionsByYear, geom = "line") +
ggtitle(expression("Coal Combustion" ~ PM[2.5] ~ "Emissions by Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
source('~/GitHub/ClassProjectExData2/Plot5.R')
png("plot5.png")
qplot(year, Emissions, data=BaltimoreMVPM25ByYear, geom="line") +
ggtitle(expression("Baltimore City" ~ PM[2.5] ~ "Motor Vehicle Emissions by Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
source('~/GitHub/ClassProjectExData2/Plot5.R')
png("plot5.png")
qplot(year, Emissions, data=BaltimoreByYear, geom="line") +
ggtitle(expression("Baltimore City" ~ PM[2.5] ~ "Motor Vehicle Emissions by Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
source('~/GitHub/ClassProjectExData2/Plot6.R')
png(filename="Plot6.png")
qplot(x      = year,
xlab   = "Year",
y      = total,
ylab   = "Total Emissions",
data   = emissionsByYear,
color  = city,
geom   = c("point", "smooth"),
method = "loess")
dev.off()
rm(list=ls())
